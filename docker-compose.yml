---
version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - 01-consumer-offsets-sync
    ports:
      - "2181:2181"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/zookeeper.yml

  broker:
    image: confluentinc/cp-server:7.2.2
    hostname: broker
    container_name: broker
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
      - "19091:19091"
      - "8090:8090"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:9091,CLIENT://broker:19091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
      # Schema Validation
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # Confluent Metrics Reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9091
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      # Self Balancing cluster
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 30000
      # EmbeddedKafkaRest: Kafka Client Configuration
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://broker:10091
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: http://0.0.0.0:8090
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.2
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - broker
    ports:
      - "8081:8081"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:19091
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/confluent_schemaregistry.yml

  connect:
    image: confluentinc/cp-server-connect:7.2.2
    hostname: connect
    container_name: connect
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8083:8083"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:19091
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/filestream-connectors,/usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/kafka_connect.yml
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.2.2.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.0
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity




  zookeeper-destination:
    image: confluentinc/cp-zookeeper:7.2.2
    hostname: zookeeper-destination
    container_name: zookeeper-destination
    networks:
      - 01-consumer-offsets-sync
    ports:
      - "2281:2281"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      ZOOKEEPER_CLIENT_PORT: 2281
      ZOOKEEPER_TICK_TIME: 2000
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1334:/usr/share/jmx-exporter/zookeeper.yml

  broker-destination:
    image: confluentinc/cp-server:7.2.2
    hostname: broker-destination
    container_name: broker-destination
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - zookeeper-destination
    ports:
      - "9191:9191"
      - "19191:19191"
      - "8190:8190"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
      - ./:/tmp/config
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1-destination"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-destination:2281'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-destination:9191,CLIENT://broker-destination:19191
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 10001
      # Cluster Linking
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE : "true"
      # Schema Validation
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry-destination:8181
      # Confluent Metrics Reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-destination:9191
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      # Self Balancing cluster
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 30000
      # EmbeddedKafkaRest: Kafka Client Configuration
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://broker-destination:11091
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: http://0.0.0.0:8190
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1334:/usr/share/jmx-exporter/kafka_broker.yml

  schema-registry-destination:
    image: confluentinc/cp-schema-registry:7.2.2
    hostname: schema-registry-destination
    container_name: schema-registry-destination
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - broker-destination
    ports:
      - "8181:8181"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-destination
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-destination:19191
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8181
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1334:/usr/share/jmx-exporter/confluent_schemaregistry.yml

  connect-destination:
    image: confluentinc/cp-server-connect:7.2.2
    hostname: connect-destination
    container_name: connect-destination
    networks:
      - 01-consumer-offsets-sync
    depends_on:
      - broker-destination
      - schema-registry-destination
    ports:
      - "8183:8183"
    volumes:
      - ~/work/sandbox/jmx-monitoring-stacks/shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-destination:19191
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-destination
      CONNECT_REST_PORT: 8183
      CONNECT_GROUP_ID: compose-connect-group-destination
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-destination:8181
      CONNECT_PLUGIN_PATH: "/usr/share/filestream-connectors,/usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1334:/usr/share/jmx-exporter/kafka_connect.yml
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.2.2.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.0
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity




volumes:
  db:
    driver: local
networks:
  01-consumer-offsets-sync:
